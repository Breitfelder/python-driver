{ '@type': "Module",
   '@role': [File, Module],
   body: [
      { '@type': "If",
         '@token': "if",
         '@role': [Expression, If],
         body: { '@type': "If.body",
            '@role': [Body, If, Then],
            'body_stmts': [
               { '@type': "Expr",
                  '@role': [Expression],
                  'col_offset': 5,
                  lineno: 2,
                  value: { '@type': "Call",
                     '@role': [Call, Expression, Function],
                     args: [
                        { '@type': "BoolLiteral",
                           '@token': "True",
                           '@role': [Argument, Boolean, Call, Expression, Function, Literal, Name, Positional, Primitive],
                           'col_offset': 11,
                           'end_col_offset': 14,
                           'end_lineno': 2,
                           lineno: 2,
                           value: true,
                        },
                     ],
                     'col_offset': 5,
                     func: { '@type': "Name",
                        '@token': "print",
                        '@role': [Call, Callee, Expression, Identifier],
                        'col_offset': 5,
                        ctx: "Load",
                        'end_col_offset': 9,
                        'end_lineno': 2,
                        lineno: 2,
                     },
                     keywords: [],
                     lineno: 2,
                  },
               },
            ],
         },
         'col_offset': 1,
         'end_col_offset': 2,
         'end_lineno': 1,
         lineno: 1,
         orelse: { '@type': "If.orelse",
            '@token': "else",
            '@role': [Body, Else, If],
            'else_stmts': [],
         },
         test: { '@type': "BoolLiteral",
            '@token': "True",
            '@role': [Boolean, Condition, Expression, If, Literal, Primitive],
            'col_offset': 4,
            'end_col_offset': 7,
            'end_lineno': 1,
            lineno: 1,
            value: true,
         },
      },
      { '@type': "If",
         '@token': "if",
         '@role': [Expression, If],
         body: { '@type': "If.body",
            '@role': [Body, If, Then],
            'body_stmts': [
               { '@type': "Expr",
                  '@role': [Expression],
                  'col_offset': 5,
                  lineno: 5,
                  value: { '@type': "Call",
                     '@role': [Call, Expression, Function],
                     args: [
                        { '@type': "BoolLiteral",
                           '@token': "True",
                           '@role': [Argument, Boolean, Call, Expression, Function, Literal, Name, Positional, Primitive],
                           'col_offset': 11,
                           'end_col_offset': 14,
                           'end_lineno': 5,
                           lineno: 5,
                           value: true,
                        },
                     ],
                     'col_offset': 5,
                     func: { '@type': "Name",
                        '@token': "print",
                        '@role': [Call, Callee, Expression, Identifier],
                        'col_offset': 5,
                        ctx: "Load",
                        'end_col_offset': 9,
                        'end_lineno': 5,
                        lineno: 5,
                     },
                     keywords: [],
                     lineno: 5,
                  },
               },
            ],
         },
         'col_offset': 1,
         'end_col_offset': 2,
         'end_lineno': 4,
         lineno: 4,
         orelse: { '@type': "If.orelse",
            '@token': "else",
            '@role': [Body, Else, If],
            'else_stmts': [],
         },
         test: { '@type': "Call",
            '@role': [Call, Condition, Expression, Function, If],
            args: [],
            'col_offset': 4,
            func: { '@type': "Name",
               '@token': "functionCall",
               '@role': [Call, Callee, Expression, Identifier],
               'col_offset': 4,
               ctx: "Load",
               'end_col_offset': 15,
               'end_lineno': 4,
               lineno: 4,
               'noops_previous': { '@type': "PreviousNoops",
                  '@role': [Noop],
                  'col_offset': 1,
                  'end_col_offset': 1,
                  'end_lineno': 3,
                  lineno: 3,
                  lines: [],
               },
            },
            keywords: [],
            lineno: 4,
         },
      },
      { '@type': "If",
         '@token': "if",
         '@role': [Expression, If],
         body: { '@type': "If.body",
            '@role': [Body, If, Then],
            'body_stmts': [
               { '@type': "Assign",
                  '@role': [Assignment, Binary, Expression],
                  'col_offset': 5,
                  lineno: 8,
                  targets: [
                     { '@type': "Name",
                        '@token': "a",
                        '@role': [Expression, Identifier, Left],
                        'col_offset': 5,
                        ctx: "Store",
                        'end_col_offset': 5,
                        'end_lineno': 8,
                        lineno: 8,
                     },
                  ],
                  value: { '@type': "Num",
                     '@token': 1.1,
                     '@role': [Expression, Literal, Number, Primitive, Right],
                     'col_offset': 9,
                     'end_col_offset': 11,
                     'end_lineno': 8,
                     lineno: 8,
                  },
               },
               { '@type': "Assign",
                  '@role': [Assignment, Binary, Expression],
                  'col_offset': 5,
                  lineno: 9,
                  targets: [
                     { '@type': "Name",
                        '@token': "x",
                        '@role': [Expression, Identifier, Left],
                        'col_offset': 5,
                        ctx: "Store",
                        'end_col_offset': 5,
                        'end_lineno': 9,
                        lineno: 9,
                     },
                  ],
                  value: { '@type': "Num",
                     '@token': 1.2,
                     '@role': [Expression, Literal, Number, Primitive, Right],
                     'col_offset': 9,
                     'end_col_offset': 11,
                     'end_lineno': 9,
                     lineno: 9,
                  },
               },
            ],
         },
         'col_offset': 1,
         'end_col_offset': 2,
         'end_lineno': 7,
         lineno: 7,
         orelse: { '@type': "If.orelse",
            '@token': "else",
            '@role': [Body, Else, If],
            'else_stmts': [
               { '@type': "If",
                  '@token': "if",
                  '@role': [Expression, If],
                  body: { '@type': "If.body",
                     '@role': [Body, If, Then],
                     'body_stmts': [
                        { '@type': "Assign",
                           '@role': [Assignment, Binary, Expression],
                           'col_offset': 5,
                           lineno: 11,
                           targets: [
                              { '@type': "Name",
                                 '@token': "c",
                                 '@role': [Expression, Identifier, Left],
                                 'col_offset': 5,
                                 ctx: "Store",
                                 'end_col_offset': 5,
                                 'end_lineno': 11,
                                 lineno: 11,
                              },
                           ],
                           value: { '@type': "Num",
                              '@token': 2.1,
                              '@role': [Expression, Literal, Number, Primitive, Right],
                              'col_offset': 9,
                              'end_col_offset': 11,
                              'end_lineno': 11,
                              lineno: 11,
                           },
                        },
                        { '@type': "Assign",
                           '@role': [Assignment, Binary, Expression],
                           'col_offset': 5,
                           lineno: 12,
                           targets: [
                              { '@type': "Name",
                                 '@token': "j",
                                 '@role': [Expression, Identifier, Left],
                                 'col_offset': 5,
                                 ctx: "Store",
                                 'end_col_offset': 5,
                                 'end_lineno': 12,
                                 lineno: 12,
                              },
                           ],
                           value: { '@type': "Num",
                              '@token': 2.2,
                              '@role': [Expression, Literal, Number, Primitive, Right],
                              'col_offset': 9,
                              'end_col_offset': 11,
                              'end_lineno': 12,
                              lineno: 12,
                           },
                        },
                     ],
                  },
                  'col_offset': 6,
                  lineno: 10,
                  orelse: { '@type': "If.orelse",
                     '@token': "else",
                     '@role': [Body, Else, If],
                     'else_stmts': [
                        { '@type': "Assign",
                           '@role': [Assignment, Binary, Expression],
                           'col_offset': 5,
                           lineno: 14,
                           targets: [
                              { '@type': "Name",
                                 '@token': "b",
                                 '@role': [Expression, Identifier, Left],
                                 'col_offset': 5,
                                 ctx: "Store",
                                 'end_col_offset': 5,
                                 'end_lineno': 14,
                                 lineno: 14,
                              },
                           ],
                           value: { '@type': "Num",
                              '@token': 3.1,
                              '@role': [Expression, Literal, Number, Primitive, Right],
                              'col_offset': 9,
                              'end_col_offset': 11,
                              'end_lineno': 14,
                              lineno: 14,
                           },
                        },
                        { '@type': "Assign",
                           '@role': [Assignment, Binary, Expression],
                           'col_offset': 5,
                           lineno: 15,
                           targets: [
                              { '@type': "Name",
                                 '@token': "p",
                                 '@role': [Expression, Identifier, Left],
                                 'col_offset': 5,
                                 ctx: "Store",
                                 'end_col_offset': 5,
                                 'end_lineno': 15,
                                 lineno: 15,
                              },
                           ],
                           value: { '@type': "Num",
                              '@token': 3.2,
                              '@role': [Expression, Literal, Number, Primitive, Right],
                              'col_offset': 9,
                              'end_col_offset': 11,
                              'end_lineno': 15,
                              lineno: 15,
                           },
                        },
                     ],
                  },
                  test: { '@type': "Compare",
                     '@role': [Binary, Condition, Expression, If],
                     'col_offset': 6,
                     comparators: { '@type': "Compare.comparators",
                        '@role': [Expression, Right],
                        comparators: [
                           { '@type': "Name",
                              '@token': "c",
                              '@role': [Expression, Identifier],
                              'col_offset': 11,
                              ctx: "Load",
                              'end_col_offset': 11,
                              'end_lineno': 10,
                              lineno: 10,
                           },
                        ],
                     },
                     left: { '@type': "Name",
                        '@token': "b",
                        '@role': [Expression, Identifier, Left],
                        'col_offset': 6,
                        ctx: "Load",
                        'end_col_offset': 6,
                        'end_lineno': 10,
                        lineno: 10,
                     },
                     lineno: 10,
                     ops: { '@type': "Compare.ops",
                        '@role': [Expression],
                        ops: [
                           { '@type': "Eq",
                              '@token': "==",
                              '@role': [Equal, Operator, Relational],
                           },
                        ],
                     },
                  },
               },
            ],
         },
         test: { '@type': "Compare",
            '@role': [Binary, Condition, Expression, If],
            'col_offset': 4,
            comparators: { '@type': "Compare.comparators",
               '@role': [Expression, Right],
               comparators: [
                  { '@type': "Name",
                     '@token': "b",
                     '@role': [Expression, Identifier],
                     'col_offset': 8,
                     ctx: "Load",
                     'end_col_offset': 8,
                     'end_lineno': 7,
                     lineno: 7,
                  },
               ],
            },
            left: { '@type': "Name",
               '@token': "a",
               '@role': [Expression, Identifier, Left],
               'col_offset': 4,
               ctx: "Load",
               'end_col_offset': 4,
               'end_lineno': 7,
               lineno: 7,
               'noops_previous': { '@type': "PreviousNoops",
                  '@role': [Noop],
                  'col_offset': 1,
                  'end_col_offset': 1,
                  'end_lineno': 6,
                  lineno: 6,
                  lines: [],
               },
            },
            lineno: 7,
            ops: { '@type': "Compare.ops",
               '@role': [Expression],
               ops: [
                  { '@type': "Gt",
                     '@token': ">",
                     '@role': [GreaterThan, Operator, Relational],
                  },
               ],
            },
         },
      },
      { '@type': "If",
         '@token': "if",
         '@role': [Expression, If],
         body: { '@type': "If.body",
            '@role': [Body, If, Then],
            'body_stmts': [
               { '@type': "Pass",
                  '@token': "pass",
                  '@role': [Noop, Statement],
                  'col_offset': 5,
                  'end_col_offset': 8,
                  'end_lineno': 18,
                  lineno: 18,
               },
            ],
         },
         'col_offset': 1,
         'end_col_offset': 2,
         'end_lineno': 17,
         lineno: 17,
         orelse: { '@type': "If.orelse",
            '@token': "else",
            '@role': [Body, Else, If],
            'else_stmts': [],
         },
         test: { '@type': "Compare",
            '@role': [Binary, Condition, Expression, If],
            'col_offset': 4,
            comparators: { '@type': "Compare.comparators",
               '@role': [Expression, Right],
               comparators: [
                  { '@type': "Name",
                     '@token': "b",
                     '@role': [Expression, Identifier],
                     'col_offset': 8,
                     ctx: "Load",
                     'end_col_offset': 8,
                     'end_lineno': 17,
                     lineno: 17,
                  },
                  { '@type': "Name",
                     '@token': "c",
                     '@role': [Expression, Identifier],
                     'col_offset': 12,
                     ctx: "Load",
                     'end_col_offset': 12,
                     'end_lineno': 17,
                     lineno: 17,
                  },
                  { '@type': "Name",
                     '@token': "d",
                     '@role': [Expression, Identifier],
                     'col_offset': 16,
                     ctx: "Load",
                     'end_col_offset': 16,
                     'end_lineno': 17,
                     lineno: 17,
                  },
               ],
            },
            left: { '@type': "Name",
               '@token': "a",
               '@role': [Expression, Identifier, Left],
               'col_offset': 4,
               ctx: "Load",
               'end_col_offset': 4,
               'end_lineno': 17,
               lineno: 17,
               'noops_previous': { '@type': "PreviousNoops",
                  '@role': [Noop],
                  'col_offset': 1,
                  'end_col_offset': 1,
                  'end_lineno': 16,
                  lineno: 16,
                  lines: [],
               },
            },
            lineno: 17,
            ops: { '@type': "Compare.ops",
               '@role': [Expression],
               ops: [
                  { '@type': "Gt",
                     '@token': ">",
                     '@role': [GreaterThan, Operator, Relational],
                  },
                  { '@type': "Gt",
                     '@token': ">",
                     '@role': [GreaterThan, Operator, Relational],
                  },
                  { '@type': "Gt",
                     '@token': ">",
                     '@role': [GreaterThan, Operator, Relational],
                  },
               ],
            },
         },
      },
   ],
}