{ '@type': "Module",
   '@role': [File, Module],
   '@pos': { '@type': "uast:Positions",
   },
   body: [
      { '@type': "For",
         '@token': "for",
         '@role': [For, Iterator, Statement],
         '@pos': { '@type': "uast:Positions",
            start: { '@type': "uast:Position",
               offset: 0,
               line: 1,
               col: 1,
            },
            end: { '@type': "uast:Position",
               offset: 2,
               line: 1,
               col: 3,
            },
         },
         body: { '@type': "For.body",
            '@role': [Body, For, Then],
            'body_stmts': [
               { '@type': "If",
                  '@token': "if",
                  '@role': [Expression, If],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 22,
                        line: 2,
                        col: 5,
                     },
                     end: { '@type': "uast:Position",
                        offset: 23,
                        line: 2,
                        col: 6,
                     },
                  },
                  body: { '@type': "If.body",
                     '@role': [Body, If, Then],
                     'body_stmts': [
                        { '@type': "Continue",
                           '@token': "continue",
                           '@role': [Continue, Statement],
                           '@pos': { '@type': "uast:Positions",
                              start: { '@type': "uast:Position",
                                 offset: 41,
                                 line: 3,
                                 col: 9,
                              },
                              end: { '@type': "uast:Position",
                                 offset: 48,
                                 line: 3,
                                 col: 16,
                              },
                           },
                        },
                     ],
                  },
                  orelse: { '@type': "If.orelse",
                     '@token': "else",
                     '@role': [Body, Else, If],
                     'else_stmts': [],
                  },
                  test: { '@type': "Compare",
                     '@role': [Binary, Condition, Expression, If],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 25,
                           line: 2,
                           col: 8,
                        },
                     },
                     comparators: { '@type': "Compare.comparators",
                        '@role': [Expression, Right],
                        comparators: [
                           { '@type': "Num",
                              '@token': 2,
                              '@role': [Expression, Literal, Number, Primitive],
                              '@pos': { '@type': "uast:Positions",
                                 start: { '@type': "uast:Position",
                                    offset: 30,
                                    line: 2,
                                    col: 13,
                                 },
                                 end: { '@type': "uast:Position",
                                    offset: 30,
                                    line: 2,
                                    col: 13,
                                 },
                              },
                           },
                        ],
                     },
                     left: { '@type': "Name",
                        '@token': "i",
                        '@role': [Expression, Identifier, Left],
                        '@pos': { '@type': "uast:Positions",
                           start: { '@type': "uast:Position",
                              offset: 25,
                              line: 2,
                              col: 8,
                           },
                           end: { '@type': "uast:Position",
                              offset: 25,
                              line: 2,
                              col: 8,
                           },
                        },
                        ctx: "Load",
                     },
                     ops: { '@type': "Compare.ops",
                        '@role': [Expression],
                        ops: [
                           { '@type': "Eq",
                              '@token': "==",
                              '@role': [Equal, Operator, Relational],
                              '@pos': { '@type': "uast:Positions",
                              },
                           },
                        ],
                     },
                  },
               },
               { '@type': "If",
                  '@token': "if",
                  '@role': [Expression, If],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 54,
                        line: 4,
                        col: 5,
                     },
                     end: { '@type': "uast:Position",
                        offset: 55,
                        line: 4,
                        col: 6,
                     },
                  },
                  body: { '@type': "If.body",
                     '@role': [Body, If, Then],
                     'body_stmts': [
                        { '@type': "Break",
                           '@token': "break",
                           '@role': [Break, Statement],
                           '@pos': { '@type': "uast:Positions",
                              start: { '@type': "uast:Position",
                                 offset: 73,
                                 line: 5,
                                 col: 9,
                              },
                              end: { '@type': "uast:Position",
                                 offset: 77,
                                 line: 5,
                                 col: 13,
                              },
                           },
                        },
                     ],
                  },
                  orelse: { '@type': "If.orelse",
                     '@token': "else",
                     '@role': [Body, Else, If],
                     'else_stmts': [],
                  },
                  test: { '@type': "Compare",
                     '@role': [Binary, Condition, Expression, If],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 57,
                           line: 4,
                           col: 8,
                        },
                     },
                     comparators: { '@type': "Compare.comparators",
                        '@role': [Expression, Right],
                        comparators: [
                           { '@type': "Num",
                              '@token': 3,
                              '@role': [Expression, Literal, Number, Primitive],
                              '@pos': { '@type': "uast:Positions",
                                 start: { '@type': "uast:Position",
                                    offset: 62,
                                    line: 4,
                                    col: 13,
                                 },
                                 end: { '@type': "uast:Position",
                                    offset: 62,
                                    line: 4,
                                    col: 13,
                                 },
                              },
                           },
                        ],
                     },
                     left: { '@type': "Name",
                        '@token': "i",
                        '@role': [Expression, Identifier, Left],
                        '@pos': { '@type': "uast:Positions",
                           start: { '@type': "uast:Position",
                              offset: 57,
                              line: 4,
                              col: 8,
                           },
                           end: { '@type': "uast:Position",
                              offset: 57,
                              line: 4,
                              col: 8,
                           },
                        },
                        ctx: "Load",
                     },
                     ops: { '@type': "Compare.ops",
                        '@role': [Expression],
                        ops: [
                           { '@type': "Eq",
                              '@token': "==",
                              '@role': [Equal, Operator, Relational],
                              '@pos': { '@type': "uast:Positions",
                              },
                           },
                        ],
                     },
                  },
               },
            ],
         },
         iter: { '@type': "List",
            '@role': [Expression, For, List, Literal, Primitive],
            '@pos': { '@type': "uast:Positions",
               start: { '@type': "uast:Position",
                  offset: 9,
                  line: 1,
                  col: 10,
               },
            },
            ctx: "Load",
            elts: [
               { '@type': "Num",
                  '@token': 1,
                  '@role': [Expression, Literal, Number, Primitive],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 10,
                        line: 1,
                        col: 11,
                     },
                     end: { '@type': "uast:Position",
                        offset: 10,
                        line: 1,
                        col: 11,
                     },
                  },
               },
               { '@type': "Num",
                  '@token': 2,
                  '@role': [Expression, Literal, Number, Primitive],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 12,
                        line: 1,
                        col: 13,
                     },
                     end: { '@type': "uast:Position",
                        offset: 12,
                        line: 1,
                        col: 13,
                     },
                  },
               },
               { '@type': "Num",
                  '@token': 3,
                  '@role': [Expression, Literal, Number, Primitive],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 14,
                        line: 1,
                        col: 15,
                     },
                     end: { '@type': "uast:Position",
                        offset: 14,
                        line: 1,
                        col: 15,
                     },
                  },
               },
            ],
         },
         orelse: { '@type': "For.orelse",
            '@token': "else",
            '@role': [Body, Else, For],
            'else_stmts': [],
         },
         target: { '@type': "Name",
            '@token': "i",
            '@role': [Expression, For, Identifier, Update],
            '@pos': { '@type': "uast:Positions",
               start: { '@type': "uast:Position",
                  offset: 4,
                  line: 1,
                  col: 5,
               },
               end: { '@type': "uast:Position",
                  offset: 4,
                  line: 1,
                  col: 5,
               },
            },
            ctx: "Store",
         },
      },
   ],
   'noops_remainder': { '@type': "RemainderNoops",
      '@role': [Noop],
      '@pos': { '@type': "uast:Positions",
         start: { '@type': "uast:Position",
            offset: 79,
            line: 6,
            col: 1,
         },
         end: { '@type': "uast:Position",
            offset: 79,
            line: 6,
            col: 1,
         },
      },
      lines: [],
   },
}