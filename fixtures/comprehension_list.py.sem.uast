{ '@type': "Module",
   '@role': [File, Module],
   body: [
      { '@type': "Expr",
         '@role': [Expression],
         'col_offset': 1,
         lineno: 1,
         value: { '@type': "ListComp",
            '@role': [Expression, For, List],
            'col_offset': 2,
            elt: { '@type': "BinOp",
               '@role': [Binary, Expression],
               'col_offset': 2,
               left: { '@type': "Name",
                  '@token': "i",
                  '@role': [Binary, Expression, Identifier, Left],
                  'col_offset': 2,
                  ctx: "Load",
                  'end_col_offset': 2,
                  'end_lineno': 1,
                  lineno: 1,
               },
               lineno: 1,
               op: { '@type': "Mult",
                  '@token': "*",
                  '@role': [Arithmetic, Binary, Multiply, Operator],
               },
               right: { '@type': "Num",
                  '@token': 2,
                  '@role': [Binary, Expression, Literal, Number, Primitive, Right],
                  'col_offset': 4,
                  'end_col_offset': 4,
                  'end_lineno': 1,
                  lineno: 1,
               },
            },
            generators: [
               { '@type': "comprehension",
                  '@role': [Expression, For, Incomplete, Iterator],
                  ifs: [
                     { '@type': "Compare",
                        '@role': [Binary, Condition, Expression, If],
                        'col_offset': 27,
                        comparators: { '@type': "Compare.comparators",
                           '@role': [Expression, Right],
                           comparators: [
                              { '@type': "Num",
                                 '@token': 2,
                                 '@role': [Expression, Literal, Number, Primitive],
                                 'col_offset': 29,
                                 'end_col_offset': 29,
                                 'end_lineno': 1,
                                 lineno: 1,
                              },
                           ],
                        },
                        left: { '@type': "Name",
                           '@token': "i",
                           '@role': [Expression, Identifier, Left],
                           'col_offset': 27,
                           ctx: "Load",
                           'end_col_offset': 27,
                           'end_lineno': 1,
                           lineno: 1,
                        },
                        lineno: 1,
                        ops: { '@type': "Compare.ops",
                           '@role': [Expression],
                           ops: [
                              { '@type': "Gt",
                                 '@token': ">",
                                 '@role': [GreaterThan, Operator, Relational],
                              },
                           ],
                        },
                     },
                  ],
                  'is_async': 0,
                  iter: { '@type': "Name",
                     '@token': "somelist",
                     '@role': [Expression, For, Identifier, Statement, Update],
                     'col_offset': 15,
                     ctx: "Load",
                     'end_col_offset': 22,
                     'end_lineno': 1,
                     lineno: 1,
                  },
                  target: { '@type': "Name",
                     '@token': "i",
                     '@role': [Expression, For, Identifier],
                     'col_offset': 10,
                     ctx: "Store",
                     'end_col_offset': 10,
                     'end_lineno': 1,
                     lineno: 1,
                  },
               },
            ],
            lineno: 1,
         },
      },
      { '@type': "Expr",
         '@role': [Expression],
         'col_offset': 1,
         lineno: 2,
         value: { '@type': "ListComp",
            '@role': [Expression, For, List],
            'col_offset': 2,
            elt: { '@type': "BinOp",
               '@role': [Binary, Expression],
               'col_offset': 2,
               left: { '@type': "Name",
                  '@token': "i",
                  '@role': [Binary, Expression, Identifier, Left],
                  'col_offset': 2,
                  ctx: "Load",
                  'end_col_offset': 2,
                  'end_lineno': 2,
                  lineno: 2,
               },
               lineno: 2,
               op: { '@type': "Mult",
                  '@token': "*",
                  '@role': [Arithmetic, Binary, Multiply, Operator],
               },
               right: { '@type': "Num",
                  '@token': 2,
                  '@role': [Binary, Expression, Literal, Number, Primitive, Right],
                  'col_offset': 4,
                  'end_col_offset': 4,
                  'end_lineno': 2,
                  lineno: 2,
               },
            },
            generators: [
               { '@type': "comprehension",
                  '@role': [Expression, For, Incomplete, Iterator],
                  ifs: [],
                  'is_async': 0,
                  iter: { '@type': "Name",
                     '@token': "somelist",
                     '@role': [Expression, For, Identifier, Statement, Update],
                     'col_offset': 21,
                     ctx: "Load",
                     'end_col_offset': 28,
                     'end_lineno': 2,
                     lineno: 2,
                  },
                  target: { '@type': "Name",
                     '@token': "sublist",
                     '@role': [Expression, For, Identifier],
                     'col_offset': 10,
                     ctx: "Store",
                     'end_col_offset': 16,
                     'end_lineno': 2,
                     lineno: 2,
                  },
               },
               { '@type': "comprehension",
                  '@role': [Expression, For, Incomplete, Iterator],
                  ifs: [],
                  'is_async': 0,
                  iter: { '@type': "Name",
                     '@token': "sublist",
                     '@role': [Expression, For, Identifier, Statement, Update],
                     'col_offset': 39,
                     ctx: "Load",
                     'end_col_offset': 45,
                     'end_lineno': 2,
                     lineno: 2,
                  },
                  target: { '@type': "Name",
                     '@token': "i",
                     '@role': [Expression, For, Identifier],
                     'col_offset': 34,
                     ctx: "Store",
                     'end_col_offset': 34,
                     'end_lineno': 2,
                     lineno: 2,
                  },
               },
            ],
            lineno: 2,
         },
      },
   ],
}