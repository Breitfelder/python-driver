{ '@type': "Module",
   '@role': [File, Module],
   body: [
      { '@type': "Try",
         '@token': "try",
         '@role': [Statement, Try],
         body: { '@type': "Try.body",
            '@role': [Body, Try],
            'body_stmts': [
               { '@type': "Assign",
                  '@role': [Assignment, Binary, Expression],
                  'col_offset': 5,
                  lineno: 2,
                  targets: [
                     { '@type': "Name",
                        '@token': "a",
                        '@role': [Expression, Identifier, Left],
                        'col_offset': 5,
                        ctx: "Store",
                        'end_col_offset': 5,
                        'end_lineno': 2,
                        lineno: 2,
                     },
                  ],
                  value: { '@type': "Num",
                     '@token': 1,
                     '@role': [Expression, Literal, Number, Primitive, Right],
                     'col_offset': 9,
                     'end_col_offset': 9,
                     'end_lineno': 2,
                     lineno: 2,
                  },
               },
               { '@type': "Raise",
                  '@token': "raise",
                  '@role': [Statement, Throw],
                  cause: ~,
                  'col_offset': 5,
                  'end_col_offset': 9,
                  'end_lineno': 3,
                  exc: { '@type': "Call",
                     '@role': [Call, Expression, Function],
                     args: [
                        { '@type': "Str",
                           '@token': "gogogo",
                           '@role': [Argument, Call, Expression, Function, Literal, Name, Positional, Primitive, String],
                           'col_offset': 21,
                           'end_col_offset': 28,
                           'end_lineno': 3,
                           lineno: 3,
                        },
                     ],
                     'col_offset': 11,
                     func: { '@type': "Name",
                        '@token': "Exception",
                        '@role': [Call, Callee, Expression, Identifier],
                        'col_offset': 11,
                        ctx: "Load",
                        'end_col_offset': 19,
                        'end_lineno': 3,
                        lineno: 3,
                     },
                     keywords: [],
                     lineno: 3,
                  },
                  lineno: 3,
               },
            ],
         },
         'col_offset': 1,
         'end_col_offset': 3,
         'end_lineno': 1,
         finalbody: { '@type': "Try.finalbody",
            '@token': "finally",
            '@role': [Finally, Try],
            'final_stmts': [
               { '@type': "Expr",
                  '@role': [Expression],
                  'col_offset': 5,
                  lineno: 9,
                  value: { '@type': "Call",
                     '@role': [Call, Expression, Function],
                     args: [
                        { '@type': "Str",
                           '@token': "here we are",
                           '@role': [Argument, Call, Expression, Function, Literal, Name, Positional, Primitive, String],
                           'col_offset': 11,
                           'end_col_offset': 23,
                           'end_lineno': 9,
                           lineno: 9,
                        },
                     ],
                     'col_offset': 5,
                     func: { '@type': "Name",
                        '@token': "print",
                        '@role': [Call, Callee, Expression, Identifier],
                        'col_offset': 5,
                        ctx: "Load",
                        'end_col_offset': 9,
                        'end_lineno': 9,
                        lineno: 9,
                     },
                     keywords: [],
                     lineno: 9,
                  },
               },
            ],
         },
         handlers: { '@type': "Try.handlers",
            '@token': "except",
            '@role': [Catch, Try],
            handlers: [
               { '@type': "ExceptHandler",
                  '@token': "e",
                  '@role': [Catch, Identifier, Try],
                  body: [
                     { '@type': "Expr",
                        '@role': [Expression],
                        'col_offset': 5,
                        lineno: 5,
                        value: { '@type': "Call",
                           '@role': [Call, Expression, Function],
                           args: [
                              { '@type': "Str",
                                 '@token': "someexception catched",
                                 '@role': [Argument, Call, Expression, Function, Literal, Name, Positional, Primitive, String],
                                 'col_offset': 11,
                                 'end_col_offset': 33,
                                 'end_lineno': 5,
                                 lineno: 5,
                              },
                           ],
                           'col_offset': 5,
                           func: { '@type': "Name",
                              '@token': "print",
                              '@role': [Call, Callee, Expression, Identifier],
                              'col_offset': 5,
                              ctx: "Load",
                              'end_col_offset': 9,
                              'end_lineno': 5,
                              lineno: 5,
                           },
                           keywords: [],
                           lineno: 5,
                        },
                     },
                  ],
                  'col_offset': 25,
                  'end_col_offset': 25,
                  'end_lineno': 4,
                  lineno: 4,
                  type: { '@type': "Name",
                     '@token': "SomeException",
                     '@role': [Expression, Identifier],
                     'col_offset': 8,
                     ctx: "Load",
                     'end_col_offset': 20,
                     'end_lineno': 4,
                     lineno: 4,
                  },
               },
               { '@type': "ExceptHandler",
                  '@role': [Catch, Identifier, Try],
                  '@token': ~,
                  body: [
                     { '@type': "Expr",
                        '@role': [Expression],
                        'col_offset': 5,
                        lineno: 7,
                        value: { '@type': "Call",
                           '@role': [Call, Expression, Function],
                           args: [
                              { '@type': "Str",
                                 '@token': "ayyyy",
                                 '@role': [Argument, Call, Expression, Function, Literal, Name, Positional, Primitive, String],
                                 'col_offset': 11,
                                 'end_col_offset': 17,
                                 'end_lineno': 7,
                                 lineno: 7,
                              },
                           ],
                           'col_offset': 5,
                           func: { '@type': "Name",
                              '@token': "print",
                              '@role': [Call, Callee, Expression, Identifier],
                              'col_offset': 5,
                              ctx: "Load",
                              'end_col_offset': 9,
                              'end_lineno': 7,
                              lineno: 7,
                           },
                           keywords: [],
                           lineno: 7,
                        },
                     },
                  ],
                  'col_offset': 1,
                  lineno: 6,
                  type: ~,
               },
            ],
         },
         lineno: 1,
         orelse: { '@type': "Try.else",
            '@token': "else",
            '@role': [Else, Try],
         },
      },
   ],
}