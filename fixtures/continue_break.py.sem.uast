{ '@type': "Module",
   '@role': [File, Module],
   body: [
      { '@type': "For",
         '@token': "for",
         '@role': [For, Iterator, Statement],
         body: { '@type': "For.body",
            '@role': [Body, For, Then],
            'body_stmts': [
               { '@type': "If",
                  '@token': "if",
                  '@role': [Expression, If],
                  body: { '@type': "If.body",
                     '@role': [Body, If, Then],
                     'body_stmts': [
                        { '@type': "Continue",
                           '@token': "continue",
                           '@role': [Continue, Statement],
                           'col_offset': 9,
                           'end_col_offset': 16,
                           'end_lineno': 3,
                           lineno: 3,
                        },
                     ],
                  },
                  'col_offset': 5,
                  'end_col_offset': 6,
                  'end_lineno': 2,
                  lineno: 2,
                  orelse: { '@type': "If.orelse",
                     '@token': "else",
                     '@role': [Body, Else, If],
                     'else_stmts': [],
                  },
                  test: { '@type': "Compare",
                     '@role': [Binary, Condition, Expression, If],
                     'col_offset': 8,
                     comparators: { '@type': "Compare.comparators",
                        '@role': [Expression, Right],
                        comparators: [
                           { '@type': "Num",
                              '@token': 2,
                              '@role': [Expression, Literal, Number, Primitive],
                              'col_offset': 13,
                              'end_col_offset': 13,
                              'end_lineno': 2,
                              lineno: 2,
                           },
                        ],
                     },
                     left: { '@type': "Name",
                        '@token': "i",
                        '@role': [Expression, Identifier, Left],
                        'col_offset': 8,
                        ctx: "Load",
                        'end_col_offset': 8,
                        'end_lineno': 2,
                        lineno: 2,
                     },
                     lineno: 2,
                     ops: { '@type': "Compare.ops",
                        '@role': [Expression],
                        ops: [
                           { '@type': "Eq",
                              '@token': "==",
                              '@role': [Equal, Operator, Relational],
                           },
                        ],
                     },
                  },
               },
               { '@type': "If",
                  '@token': "if",
                  '@role': [Expression, If],
                  body: { '@type': "If.body",
                     '@role': [Body, If, Then],
                     'body_stmts': [
                        { '@type': "Break",
                           '@token': "break",
                           '@role': [Break, Statement],
                           'col_offset': 9,
                           'end_col_offset': 13,
                           'end_lineno': 5,
                           lineno: 5,
                        },
                     ],
                  },
                  'col_offset': 5,
                  'end_col_offset': 6,
                  'end_lineno': 4,
                  lineno: 4,
                  orelse: { '@type': "If.orelse",
                     '@token': "else",
                     '@role': [Body, Else, If],
                     'else_stmts': [],
                  },
                  test: { '@type': "Compare",
                     '@role': [Binary, Condition, Expression, If],
                     'col_offset': 8,
                     comparators: { '@type': "Compare.comparators",
                        '@role': [Expression, Right],
                        comparators: [
                           { '@type': "Num",
                              '@token': 3,
                              '@role': [Expression, Literal, Number, Primitive],
                              'col_offset': 13,
                              'end_col_offset': 13,
                              'end_lineno': 4,
                              lineno: 4,
                           },
                        ],
                     },
                     left: { '@type': "Name",
                        '@token': "i",
                        '@role': [Expression, Identifier, Left],
                        'col_offset': 8,
                        ctx: "Load",
                        'end_col_offset': 8,
                        'end_lineno': 4,
                        lineno: 4,
                     },
                     lineno: 4,
                     ops: { '@type': "Compare.ops",
                        '@role': [Expression],
                        ops: [
                           { '@type': "Eq",
                              '@token': "==",
                              '@role': [Equal, Operator, Relational],
                           },
                        ],
                     },
                  },
               },
            ],
         },
         'col_offset': 1,
         'end_col_offset': 3,
         'end_lineno': 1,
         iter: { '@type': "List",
            '@role': [Expression, For, List, Literal, Primitive],
            'col_offset': 10,
            ctx: "Load",
            elts: [
               { '@type': "Num",
                  '@token': 1,
                  '@role': [Expression, Literal, Number, Primitive],
                  'col_offset': 11,
                  'end_col_offset': 11,
                  'end_lineno': 1,
                  lineno: 1,
               },
               { '@type': "Num",
                  '@token': 2,
                  '@role': [Expression, Literal, Number, Primitive],
                  'col_offset': 13,
                  'end_col_offset': 13,
                  'end_lineno': 1,
                  lineno: 1,
               },
               { '@type': "Num",
                  '@token': 3,
                  '@role': [Expression, Literal, Number, Primitive],
                  'col_offset': 15,
                  'end_col_offset': 15,
                  'end_lineno': 1,
                  lineno: 1,
               },
            ],
            lineno: 1,
         },
         lineno: 1,
         orelse: { '@type': "For.orelse",
            '@token': "else",
            '@role': [Body, Else, For],
            'else_stmts': [],
         },
         target: { '@type': "Name",
            '@token': "i",
            '@role': [Expression, For, Identifier, Update],
            'col_offset': 5,
            ctx: "Store",
            'end_col_offset': 5,
            'end_lineno': 1,
            lineno: 1,
         },
      },
   ],
   'noops_remainder': { '@type': "RemainderNoops",
      '@role': [Noop],
      'col_offset': 1,
      'end_col_offset': 1,
      'end_lineno': 6,
      lineno: 6,
      lines: [],
   },
}